package terminaloperation;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

public class TerminalOperation {

	public static void main(String[] args) {
		List<Integer> numbers = Arrays.asList(5, 2, 8, 1, 9);
		
		// 1. forEach()
        /*numbers.stream()
               .forEach(System.out::println);*/
		
		 // 2. toArray()
        /*Integer[] array = numbers.stream().toArray(Integer[]::new);
        System.out.println(Arrays.toString(array));*/
		
		// 3. reduce()
        /*int sum = numbers.stream().reduce(0, Integer::sum);
        System.out.println("Sum: " + sum);*/
		
		// 4. collect()
       /* List<Integer> even = numbers.stream()
                                    .filter(n -> n % 2 == 0)
                                    .collect(Collectors.toList());
        System.out.println(even);*/
		
		 // 5. count()
        /*long count = numbers.stream().filter(n -> n > 5).count();
        System.out.println("Count >5: " + count);*/
		
		// 6. anyMatch()
        /*boolean hasEven = numbers.stream().anyMatch(n -> n % 2 == 0);
        System.out.println("Has even: " + hasEven);*/
		
		// 7. allMatch()
        /*boolean allPositive = numbers.stream().allMatch(n -> n > 0);
        System.out.println("All positive: " + allPositive);*/
		
		// 8. noneMatch()
        /*boolean noneNegative = numbers.stream().noneMatch(n -> n < 0);
        System.out.println("None negative: " + noneNegative);*/
		
		 // 9. findFirst()
        /*Optional<Integer> first = numbers.stream().findFirst();
        first.ifPresent(n -> System.out.println("First: " + n));*/
		
		// 10. findAny()
        /*Optional<Integer> any = numbers.stream().findAny();
        any.ifPresent(n -> System.out.println("Any: " + n));*/
		
		// 11. min()
        Optional<Integer> min = numbers.stream().min(Integer::compareTo);
        min.ifPresent(n -> System.out.println("Min: " + n));








		




	}

}
